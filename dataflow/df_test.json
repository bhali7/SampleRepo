{
	"name": "df_test",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_test",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_test",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapCampaignAnalytics"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {_Col0_} as string,",
				"          {_Col1_} as string,",
				"          {_Col2_} as string,",
				"          {_Col3_} as string,",
				"          {_Col4_} as string,",
				"          {_Col5_} as double,",
				"          {_Col6_} as string,",
				"          {_Col7_} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false) ~> source1",
				"source1 select(mapColumn(",
				"          Region = {_Col0_},",
				"          Country = {_Col1_},",
				"          ProductCategory = {_Col2_},",
				"          CampaingnName = {_Col3_},",
				"          RevenuePart1 = {_Col4_},",
				"          Revenue = {_Col5_},",
				"          RevenueTargetPart1 = {_Col6_},",
				"          RevenueTarget = {_Col7_}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MapCampaignAnalytics",
				"MapCampaignAnalytics derive(Revenue = toDecimal(replace(concat(toString(RevenuePart1), toString(Revenue)), '\\\\', ''), 10, 2, '$###,###.##'),",
				"          RevenueTarget = toDecimal(replace(concat(toString(RevenueTargetPart1), toString(RevenueTarget)), '\\\\', ''), 10, 2, '$###,###.##')) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Region,",
				"          Country,",
				"          ProductCategory,",
				"          CampaingnName,",
				"          Revenue,",
				"          RevenueTarget",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}